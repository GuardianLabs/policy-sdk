/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, type ContractRunner } from 'ethers';
import type { IMinArbitraryDataArtifact } from './min-arbitrary-data-artifact.interface';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'exec',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExecDescriptor',
    outputs: [
      {
        internalType: 'string[]',
        name: 'argsNames',
        type: 'string[]',
      },
      {
        internalType: 'string[]',
        name: 'argsTypes',
        type: 'string[]',
      },
      {
        internalType: 'string',
        name: 'returnType',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getInitDescriptor',
    outputs: [
      {
        internalType: 'string[]',
        name: 'argsNames',
        type: 'string[]',
      },
      {
        internalType: 'string[]',
        name: 'argsTypes',
        type: 'string[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class MinArbitraryDataArtifactFactory {
  static readonly abi = _abi;

  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IMinArbitraryDataArtifact {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as IMinArbitraryDataArtifact;
  }
}
